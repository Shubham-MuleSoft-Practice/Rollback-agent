name: Publish to Exchange & Deploy to CH2.0

on:
  push:
    branches: [ main ]
    
jobs:         
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Set up JDK 1.17
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: 17
      
      # - name: Publish to Exchange
      #   run: |
      #     mvn clean deploy --settings .maven/settings.xml -DskipMunitTests \
      #     -Dclient.id="${{ secrets.CONNECTED_APP_CLIENT_ID }}" \
      #     -Dclient.secret="${{ secrets.CONNECTED_APP_CLIENT_SECRET }}"

      # - name: Deploy to CloudHub 2.0
      #   run: |
      #     mvn clean deploy -DmuleDeploy --settings .maven/settings.xml \
      #     -Dclient.id="${{ secrets.CONNECTED_APP_CLIENT_ID }}" \
      #     -Dclient.secret="${{ secrets.CONNECTED_APP_CLIENT_SECRET }}" 

      - name: CloudHub 2.0 Health Check
        id: health
        run: |
          TOKEN=$(curl --silent --location 'https://anypoint.mulesoft.com/accounts/login' \
            --header 'Content-Type: application/json' \
            --data-raw '{
              "username": "Shubh-agentic-practice",
              "password": "Shubham@123"
            }' | jq -r '.access_token')

          DEPLOYMENT_URL="https://anypoint.mulesoft.com/amc/application-manager/api/v2/organizations/a06ee080-7d09-4a5a-9993-6ec85695bed5/environments/b559069a-e2ad-4e8a-bb41-2639ec7fbd69/deployments/7f7339cc-3658-48f2-b3c7-afd694cca61b"

          STATUS=$(curl -s -X GET "$DEPLOYMENT_URL" \
            -H "Authorization: Bearer $TOKEN" | jq -r '.application.status')

          LAST_SUCCESSFUL=$(curl -s -X GET "$DEPLOYMENT_URL" \
            -H "Authorization: Bearer $TOKEN" | jq -r '.lastSuccessfulVersion')

          echo "Deployment Status: $STATUS"
          echo "Last Successful Version: $LAST_SUCCESSFUL"

          if [ "$STATUS" != "RUNNING" ]; then
            echo "fail=true" >> $GITHUB_OUTPUT
            echo "last_successful=$LAST_SUCCESSFUL" >> $GITHUB_OUTPUT
          else
            echo "fail=false" >> $GITHUB_OUTPUT
          fi

      - name: Rollback if Health Check Fails
        if: steps.health.outputs.fail == 'true'
        run: |
          echo "Deployment failed. Rolling back to version: ${{ steps.health.outputs.last_successful }}"
          TOKEN=$(curl --silent --location 'https://anypoint.mulesoft.com/accounts/login' \
            --header 'Content-Type: application/json' \
            --data-raw '{
              "username": "Shubh-agentic-practice",
              "password": "Shubham@123"
            }' | jq -r '.access_token')

          DEPLOYMENT_URL="https://anypoint.mulesoft.com/amc/application-manager/api/v2/organizations/a06ee080-7d09-4a5a-9993-6ec85695bed5/environments/b559069a-e2ad-4e8a-bb41-2639ec7fbd69/deployments/7f7339cc-3658-48f2-b3c7-afd694cca61b"

          # ðŸ”„ Trigger Rollback to Last Successful Version
          curl -s -X PATCH "$DEPLOYMENT_URL" \
            -H "Authorization: Bearer $TOKEN" \
            -H "Content-Type: application/json" \
            -d "{
              \"desiredVersion\": \"${{ steps.health.outputs.last_successful }}\"
            }"

          echo "âœ… Rollback triggered successfully!"
          
          # --- Rollback GitHub repo to last successful commit ---
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git fetch origin

          # Reset branch to the last successful commit dynamically
          git reset --hard ${{ steps.last_commit.outputs.last_successful }}

          # Force push the reset branch to origin (warning: rewrites history)
          git push origin HEAD:main --force

          echo "âœ… Git rollback complete to last successful commit: ${{ steps.last_commit.outputs.last_successful }}"
